comment_char:            "`"
multiline_comment_chars: "```"

reserved:
    - if
    - elsif
    - elif
    - else
    - while
    - elswhile
    - elwhile
    - unless
    - until
    - 'true'
    - 'false'
    - and
    - nil
    - new
    - skip
    - stop
    - or
    - return
    - end
    - '{'
    - '['
    - '('
    - ')'
    - ']'
    - '}'
    - ";" # used as delimiter between param declarations and body in a function
    - '=;'
    - '@'
    - '.?'
    - './'
    - '../'
    - '.../'
    # todo add others

# todo categorize all operators

operators:
    prefix:
        - _
        - __
        - "-"
        - "+"
        - "!"
        - "??"
        - "~"
        - "@" # @var short for @.var
        - ">!!!" # print error
        - ">!!" # print warning
        - ">!" # print log
        - "./" # self
        - "../" # like ::Whatever in Ruby
        - ".../" # third party

    infix:
        - "="
        - "+"
        - "-"
        - "*"
        - "/"
        - "%"
        - ":"
        - "."
        - "<"
        - ">"
        - "&"
        - "|"
        - "^"
        - "+="
        - "-="
        - "*="
        - "|="
        - "/="
        - "%="
        - "&="
        - "^="
        - "=="
        - "!="
        - "<="
        - ">="
        - "<<"
        - ">>"
        - "**"
        - ".?" # like Ruby's `&.`
        - ".."
        - ".<"
        - "><"
        - ">."
        - "&&"
        - "||"
        - "or" # functionally identical to ||
        - "and" # functionally identical to &&

    postfix:
        - "!"
        - "?"
        - "=;" # var1 =; is equivalent to var1 = nil
        - 'f' # cast to float
        - 'i' # cast to int

    circumfix:
        - '{'
        - '['
        - '('
        - ')'
        - ']'
        - '}'
        - '|'
